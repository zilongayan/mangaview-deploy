{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    },
    {
      "source": "/home",
      "destination": "/",
      "statusCode": 308,
      "regex": "^(?!/_next)/home(?:/)?$"
    },
    {
      "source": "/manga",
      "destination": "/gallery",
      "statusCode": 308,
      "regex": "^(?!/_next)/manga(?:/)?$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "origin-when-cross-origin"
        },
        {
          "key": "Permissions-Policy",
          "value": "camera=(), microphone=(), geolocation=()"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    },
    {
      "source": "/api/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=3600, s-maxage=3600"
        }
      ],
      "regex": "^/api(?:/(.*))(?:/)?$"
    },
    {
      "source": "/_next/static/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/_next/static(?:/(.*))(?:/)?$"
    },
    {
      "source": "/images/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/images(?:/(.*))(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/collections/[id]",
      "regex": "^/api/collections/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/collections/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/collections/[id]/items",
      "regex": "^/api/collections/([^/]+?)/items(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/collections/(?<nxtPid>[^/]+?)/items(?:/)?$"
    },
    {
      "page": "/api/mangadex/[...path]",
      "regex": "^/api/mangadex/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPpath": "nxtPpath"
      },
      "namedRegex": "^/api/mangadex/(?<nxtPpath>.+?)(?:/)?$"
    },
    {
      "page": "/api/mdx/[...path]",
      "regex": "^/api/mdx/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPpath": "nxtPpath"
      },
      "namedRegex": "^/api/mdx/(?<nxtPpath>.+?)(?:/)?$"
    },
    {
      "page": "/[locale]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/about",
      "regex": "^/([^/]+?)/about(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/about(?:/)?$"
    },
    {
      "page": "/[locale]/collections",
      "regex": "^/([^/]+?)/collections(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/collections(?:/)?$"
    },
    {
      "page": "/[locale]/favorites",
      "regex": "^/([^/]+?)/favorites(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/favorites(?:/)?$"
    },
    {
      "page": "/[locale]/gallery/[id]",
      "regex": "^/([^/]+?)/gallery/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/gallery/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/login",
      "regex": "^/([^/]+?)/login(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/login(?:/)?$"
    },
    {
      "page": "/[locale]/popular",
      "regex": "^/([^/]+?)/popular(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/popular(?:/)?$"
    },
    {
      "page": "/[locale]/profile",
      "regex": "^/([^/]+?)/profile(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/profile(?:/)?$"
    },
    {
      "page": "/[locale]/random",
      "regex": "^/([^/]+?)/random(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/random(?:/)?$"
    },
    {
      "page": "/[locale]/reader/[mangaId]/[chapterId]",
      "regex": "^/([^/]+?)/reader/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPmangaId": "nxtPmangaId",
        "nxtPchapterId": "nxtPchapterId"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/reader/(?<nxtPmangaId>[^/]+?)/(?<nxtPchapterId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/recent",
      "regex": "^/([^/]+?)/recent(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/recent(?:/)?$"
    },
    {
      "page": "/[locale]/search",
      "regex": "^/([^/]+?)/search(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/search(?:/)?$"
    },
    {
      "page": "/[locale]/signup",
      "regex": "^/([^/]+?)/signup(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/signup(?:/)?$"
    },
    {
      "page": "/[locale]/tags/[tag]",
      "regex": "^/([^/]+?)/tags/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPtag": "nxtPtag"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/tags/(?<nxtPtag>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/[type]",
      "regex": "^/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPtype": "nxtPtype"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/(?<nxtPtype>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/robots.txt",
      "regex": "^/robots\\.txt(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/robots\\.txt(?:/)?$"
    },
    {
      "page": "/sitemap.xml",
      "regex": "^/sitemap\\.xml(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sitemap\\.xml(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}